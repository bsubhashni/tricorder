// Code generated by protoc-gen-go. DO NOT EDIT.
// source: AgentService.proto

/*
Package rpc is a generated protocol buffer package.

It is generated from these files:
	AgentService.proto

It has these top-level messages:
	CoordinatorInfo
	AgentInfo
	CoordinatorCaptureRequest
	AgentCaptureResponse
	CoordinatorGoodByeRequest
	AgentGoodByeResponse
	CoordinatorResultsRequest
	AgentResultsResponse
*/
package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CoordinatorInfo struct {
	Hostname string `protobuf:"bytes,1,opt,name=hostname" json:"hostname,omitempty"`
}

func (m *CoordinatorInfo) Reset()                    { *m = CoordinatorInfo{} }
func (m *CoordinatorInfo) String() string            { return proto.CompactTextString(m) }
func (*CoordinatorInfo) ProtoMessage()               {}
func (*CoordinatorInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CoordinatorInfo) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

type AgentInfo struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *AgentInfo) Reset()                    { *m = AgentInfo{} }
func (m *AgentInfo) String() string            { return proto.CompactTextString(m) }
func (*AgentInfo) ProtoMessage()               {}
func (*AgentInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AgentInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CoordinatorCaptureRequest struct {
	SequencePrefix int32 `protobuf:"varint,1,opt,name=sequencePrefix" json:"sequencePrefix,omitempty"`
}

func (m *CoordinatorCaptureRequest) Reset()                    { *m = CoordinatorCaptureRequest{} }
func (m *CoordinatorCaptureRequest) String() string            { return proto.CompactTextString(m) }
func (*CoordinatorCaptureRequest) ProtoMessage()               {}
func (*CoordinatorCaptureRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CoordinatorCaptureRequest) GetSequencePrefix() int32 {
	if m != nil {
		return m.SequencePrefix
	}
	return 0
}

type AgentCaptureResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *AgentCaptureResponse) Reset()                    { *m = AgentCaptureResponse{} }
func (m *AgentCaptureResponse) String() string            { return proto.CompactTextString(m) }
func (*AgentCaptureResponse) ProtoMessage()               {}
func (*AgentCaptureResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AgentCaptureResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type CoordinatorGoodByeRequest struct {
}

func (m *CoordinatorGoodByeRequest) Reset()                    { *m = CoordinatorGoodByeRequest{} }
func (m *CoordinatorGoodByeRequest) String() string            { return proto.CompactTextString(m) }
func (*CoordinatorGoodByeRequest) ProtoMessage()               {}
func (*CoordinatorGoodByeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type AgentGoodByeResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *AgentGoodByeResponse) Reset()                    { *m = AgentGoodByeResponse{} }
func (m *AgentGoodByeResponse) String() string            { return proto.CompactTextString(m) }
func (*AgentGoodByeResponse) ProtoMessage()               {}
func (*AgentGoodByeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *AgentGoodByeResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type CoordinatorResultsRequest struct {
}

func (m *CoordinatorResultsRequest) Reset()                    { *m = CoordinatorResultsRequest{} }
func (m *CoordinatorResultsRequest) String() string            { return proto.CompactTextString(m) }
func (*CoordinatorResultsRequest) ProtoMessage()               {}
func (*CoordinatorResultsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type AgentResultsResponse struct {
	Status string                              `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Type   string                              `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Result []*AgentResultsResponse_CaptureInfo `protobuf:"bytes,3,rep,name=result" json:"result,omitempty"`
}

func (m *AgentResultsResponse) Reset()                    { *m = AgentResultsResponse{} }
func (m *AgentResultsResponse) String() string            { return proto.CompactTextString(m) }
func (*AgentResultsResponse) ProtoMessage()               {}
func (*AgentResultsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AgentResultsResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *AgentResultsResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AgentResultsResponse) GetResult() []*AgentResultsResponse_CaptureInfo {
	if m != nil {
		return m.Result
	}
	return nil
}

type AgentResultsResponse_CaptureInfo struct {
	Opaque  string `protobuf:"bytes,1,opt,name=opaque" json:"opaque,omitempty"`
	Latency string `protobuf:"bytes,2,opt,name=latency" json:"latency,omitempty"`
}

func (m *AgentResultsResponse_CaptureInfo) Reset()         { *m = AgentResultsResponse_CaptureInfo{} }
func (m *AgentResultsResponse_CaptureInfo) String() string { return proto.CompactTextString(m) }
func (*AgentResultsResponse_CaptureInfo) ProtoMessage()    {}
func (*AgentResultsResponse_CaptureInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{7, 0}
}

func (m *AgentResultsResponse_CaptureInfo) GetOpaque() string {
	if m != nil {
		return m.Opaque
	}
	return ""
}

func (m *AgentResultsResponse_CaptureInfo) GetLatency() string {
	if m != nil {
		return m.Latency
	}
	return ""
}

func init() {
	proto.RegisterType((*CoordinatorInfo)(nil), "rpc.CoordinatorInfo")
	proto.RegisterType((*AgentInfo)(nil), "rpc.AgentInfo")
	proto.RegisterType((*CoordinatorCaptureRequest)(nil), "rpc.CoordinatorCaptureRequest")
	proto.RegisterType((*AgentCaptureResponse)(nil), "rpc.AgentCaptureResponse")
	proto.RegisterType((*CoordinatorGoodByeRequest)(nil), "rpc.CoordinatorGoodByeRequest")
	proto.RegisterType((*AgentGoodByeResponse)(nil), "rpc.AgentGoodByeResponse")
	proto.RegisterType((*CoordinatorResultsRequest)(nil), "rpc.CoordinatorResultsRequest")
	proto.RegisterType((*AgentResultsResponse)(nil), "rpc.AgentResultsResponse")
	proto.RegisterType((*AgentResultsResponse_CaptureInfo)(nil), "rpc.AgentResultsResponse.CaptureInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AgentService service

type AgentServiceClient interface {
	Hello(ctx context.Context, in *CoordinatorInfo, opts ...grpc.CallOption) (*AgentInfo, error)
	CaptureSignal(ctx context.Context, in *CoordinatorCaptureRequest, opts ...grpc.CallOption) (*AgentCaptureResponse, error)
	GoodByeSignal(ctx context.Context, in *CoordinatorGoodByeRequest, opts ...grpc.CallOption) (*AgentGoodByeResponse, error)
	AgentResults(ctx context.Context, in *CoordinatorResultsRequest, opts ...grpc.CallOption) (*AgentResultsResponse, error)
}

type agentServiceClient struct {
	cc *grpc.ClientConn
}

func NewAgentServiceClient(cc *grpc.ClientConn) AgentServiceClient {
	return &agentServiceClient{cc}
}

func (c *agentServiceClient) Hello(ctx context.Context, in *CoordinatorInfo, opts ...grpc.CallOption) (*AgentInfo, error) {
	out := new(AgentInfo)
	err := grpc.Invoke(ctx, "/rpc.AgentService/Hello", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) CaptureSignal(ctx context.Context, in *CoordinatorCaptureRequest, opts ...grpc.CallOption) (*AgentCaptureResponse, error) {
	out := new(AgentCaptureResponse)
	err := grpc.Invoke(ctx, "/rpc.AgentService/CaptureSignal", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) GoodByeSignal(ctx context.Context, in *CoordinatorGoodByeRequest, opts ...grpc.CallOption) (*AgentGoodByeResponse, error) {
	out := new(AgentGoodByeResponse)
	err := grpc.Invoke(ctx, "/rpc.AgentService/GoodByeSignal", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) AgentResults(ctx context.Context, in *CoordinatorResultsRequest, opts ...grpc.CallOption) (*AgentResultsResponse, error) {
	out := new(AgentResultsResponse)
	err := grpc.Invoke(ctx, "/rpc.AgentService/AgentResults", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AgentService service

type AgentServiceServer interface {
	Hello(context.Context, *CoordinatorInfo) (*AgentInfo, error)
	CaptureSignal(context.Context, *CoordinatorCaptureRequest) (*AgentCaptureResponse, error)
	GoodByeSignal(context.Context, *CoordinatorGoodByeRequest) (*AgentGoodByeResponse, error)
	AgentResults(context.Context, *CoordinatorResultsRequest) (*AgentResultsResponse, error)
}

func RegisterAgentServiceServer(s *grpc.Server, srv AgentServiceServer) {
	s.RegisterService(&_AgentService_serviceDesc, srv)
}

func _AgentService_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CoordinatorInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.AgentService/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).Hello(ctx, req.(*CoordinatorInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_CaptureSignal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CoordinatorCaptureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).CaptureSignal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.AgentService/CaptureSignal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).CaptureSignal(ctx, req.(*CoordinatorCaptureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_GoodByeSignal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CoordinatorGoodByeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).GoodByeSignal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.AgentService/GoodByeSignal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).GoodByeSignal(ctx, req.(*CoordinatorGoodByeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_AgentResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CoordinatorResultsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).AgentResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.AgentService/AgentResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).AgentResults(ctx, req.(*CoordinatorResultsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AgentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.AgentService",
	HandlerType: (*AgentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _AgentService_Hello_Handler,
		},
		{
			MethodName: "CaptureSignal",
			Handler:    _AgentService_CaptureSignal_Handler,
		},
		{
			MethodName: "GoodByeSignal",
			Handler:    _AgentService_GoodByeSignal_Handler,
		},
		{
			MethodName: "AgentResults",
			Handler:    _AgentService_AgentResults_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "AgentService.proto",
}

func init() { proto.RegisterFile("AgentService.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 369 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x93, 0xdf, 0x4a, 0xe3, 0x40,
	0x14, 0xc6, 0xdb, 0x74, 0xdb, 0xdd, 0x9e, 0xee, 0x76, 0x61, 0x28, 0x92, 0xa6, 0x20, 0x65, 0x40,
	0xe9, 0x8d, 0x11, 0xea, 0xb5, 0x88, 0xf6, 0x42, 0x45, 0x2f, 0x24, 0x7d, 0x82, 0x98, 0x9c, 0xd6,
	0x40, 0x9c, 0x99, 0xce, 0x4c, 0xc4, 0xbe, 0x91, 0xcf, 0xe1, 0x93, 0x49, 0xc6, 0x49, 0x9a, 0xc4,
	0x3f, 0xe0, 0xdd, 0x9c, 0xc3, 0x7c, 0xbf, 0xef, 0xe4, 0x7c, 0x13, 0x20, 0xe7, 0x6b, 0x64, 0x7a,
	0x89, 0xf2, 0x29, 0x89, 0xd0, 0x17, 0x92, 0x6b, 0x4e, 0x3a, 0x52, 0x44, 0xf4, 0x08, 0xfe, 0x2f,
	0x38, 0x97, 0x71, 0xc2, 0x42, 0xcd, 0xe5, 0x35, 0x5b, 0x71, 0xe2, 0xc1, 0x9f, 0x07, 0xae, 0x34,
	0x0b, 0x1f, 0xd1, 0x6d, 0x4f, 0xdb, 0xb3, 0x7e, 0x50, 0xd6, 0x74, 0x02, 0x7d, 0x43, 0x32, 0x17,
	0x87, 0xe0, 0x24, 0xb1, 0xbd, 0xe2, 0x24, 0x31, 0x5d, 0xc0, 0xb8, 0xc2, 0x5a, 0x84, 0x42, 0x67,
	0x12, 0x03, 0xdc, 0x64, 0xa8, 0x34, 0x39, 0x84, 0xa1, 0xca, 0x8f, 0x2c, 0xc2, 0x3b, 0x89, 0xab,
	0xe4, 0xd9, 0x08, 0xbb, 0x41, 0xa3, 0x4b, 0x7d, 0x18, 0x19, 0x87, 0x52, 0xae, 0x04, 0x67, 0x0a,
	0xc9, 0x1e, 0xf4, 0x94, 0x0e, 0x75, 0xa6, 0xac, 0xa1, 0xad, 0xe8, 0xa4, 0x66, 0x7a, 0xc9, 0x79,
	0x7c, 0xb1, 0x2d, 0x4c, 0x4b, 0x58, 0xd9, 0xfe, 0x11, 0x2c, 0x40, 0x95, 0xa5, 0x5a, 0x15, 0xb0,
	0xd7, 0xb6, 0xa5, 0x95, 0xfd, 0xef, 0x69, 0x84, 0xc0, 0x2f, 0xbd, 0x15, 0xe8, 0x3a, 0xa6, 0x6b,
	0xce, 0xe4, 0x14, 0x7a, 0xd2, 0xc8, 0xdd, 0xce, 0xb4, 0x33, 0x1b, 0xcc, 0x0f, 0x7c, 0x29, 0x22,
	0xff, 0x33, 0xac, 0x6f, 0x37, 0x90, 0xaf, 0x3a, 0xb0, 0x22, 0xef, 0x0c, 0x06, 0x95, 0x76, 0xee,
	0xcc, 0x45, 0xb8, 0xc9, 0x8a, 0xa0, 0x6c, 0x45, 0x5c, 0xf8, 0x9d, 0x86, 0x1a, 0x59, 0xb4, 0xb5,
	0xe6, 0x45, 0x39, 0x7f, 0x71, 0xe0, 0x6f, 0xf5, 0x2d, 0x90, 0x63, 0xe8, 0x5e, 0x61, 0x9a, 0x72,
	0x32, 0x32, 0x93, 0x34, 0x1e, 0x83, 0x37, 0xdc, 0xcd, 0x97, 0xd7, 0xb4, 0x45, 0x6e, 0xe1, 0x9f,
	0x1d, 0x61, 0x99, 0xac, 0x59, 0x98, 0x92, 0xfd, 0xa6, 0xb0, 0x9e, 0xbc, 0x37, 0xde, 0x21, 0x1a,
	0xa1, 0xbe, 0xd3, 0x6c, 0x38, 0x5f, 0xd1, 0xea, 0x91, 0x56, 0x69, 0x8d, 0x54, 0x69, 0x8b, 0xdc,
	0xd8, 0x8f, 0xb3, 0xab, 0xfc, 0x08, 0xab, 0x47, 0x5a, 0x85, 0x35, 0xb6, 0x4f, 0x5b, 0xf7, 0x3d,
	0xf3, 0x9b, 0x9c, 0xbc, 0x05, 0x00, 0x00, 0xff, 0xff, 0xe2, 0xaa, 0x91, 0xb7, 0x3c, 0x03, 0x00,
	0x00,
}
